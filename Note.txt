Observable data structure classes used in this lab & their locations: -

class Int_Stack → Lab_38.java
class Char_Stack → Lab_39.java
class Int_Array_Stack → Lab_43.java
class Int_Queue → Lab_50.java
class Int_Circular_Queue → Lab_51.java
class Int_Doubled_Ended_Queue → Lab_52.java
class Int_Priority_Queue → Lab_53.java
class String_Circular_Queue → Lab_54.java
class Node → Lab_56.java
class Int_LinkedList → Lab_57.java
class Stack_Using_LinkedList → Lab_60.java
class Queue_Using_LinkedList → Lab_61.java
class Int_Circular_LinkedList → Lab_71.java
class String_Node → Lab_75.java.java
class String_LinkedList → Lab_75.java
class Doubly_Node → Lab_72.java
class Int_Doubly_LinkedList → Lab_72.java
class Int_Tree_Node → Array_To_CompleteBinaryTree.java
class Int_Complete_Binary_Tree → Array_To_CompleteBinaryTree.java


For small arrays (generally):-
Best → Insertion Sort
Worst → Heap Sort

For large arrays (generally):-
Best → Merge Sort / Quick Sort
Worst → Bubble Sort

9. Bucket Sort
    Time Complexity:
    Best Case: (O(n + k))
    Average Case: (O(n + k))
    Worst Case: (O(n^2))
    Description: Efficient for uniformly distributed data, stable.
10. Heap Sort